[{"C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\index.js":"1","C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\playground\\redux-101.js":"2","C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\App.js":"3","C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\state-management\\StateProvider.js":"4","C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\state-management\\reducer.js":"5","C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\components\\Login.jsx":"6","C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\components\\Chat.jsx":"7","C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\components\\IconSidebar.jsx":"8","C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\components\\Sidebar.jsx":"9","C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\Firebase\\Firebase.js":"10","C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\components\\RoomChat.jsx":"11","C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\components\\RoomInfo.jsx":"12"},{"size":853,"mtime":1618435620574,"results":"13","hashOfConfig":"14"},{"size":882,"mtime":1617025107000,"results":"15","hashOfConfig":"14"},{"size":1470,"mtime":1619526507950,"results":"16","hashOfConfig":"14"},{"size":395,"mtime":1617025107000,"results":"17","hashOfConfig":"14"},{"size":859,"mtime":1619845560309,"results":"18","hashOfConfig":"14"},{"size":2876,"mtime":1619885694977,"results":"19","hashOfConfig":"14"},{"size":310,"mtime":1617025107000,"results":"20","hashOfConfig":"14"},{"size":1659,"mtime":1619845470028,"results":"21","hashOfConfig":"14"},{"size":2388,"mtime":1619156034099,"results":"22","hashOfConfig":"14"},{"size":653,"mtime":1617025107000,"results":"23","hashOfConfig":"14"},{"size":6122,"mtime":1619840925005,"results":"24","hashOfConfig":"14"},{"size":940,"mtime":1617025107000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1c12ivi",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\index.js",[],["54","55"],"C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\playground\\redux-101.js",[],["56","57"],"C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\App.js",[],"C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\state-management\\StateProvider.js",[],"C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\state-management\\reducer.js",[],"C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\components\\Login.jsx",["58"],"C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\components\\Chat.jsx",[],"C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\components\\IconSidebar.jsx",[],"C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\components\\Sidebar.jsx",["59","60","61"],"import React, {useState, useEffect} from 'react'\r\nimport './component-stylesheet/Sidebar.css'\r\nimport {Add, Search} from '@material-ui/icons'\r\nimport { Avatar } from '@material-ui/core';\r\nimport { useStateValue } from '../state-management/StateProvider'\r\nimport {database} from '../Firebase/Firebase'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Sidebar() {\r\n\r\n  const [state] = useStateValue();\r\n  const [messages, setMessages] = useState([]);\r\n  // const [friends, setFriends] = useState([]);\r\n\r\n  const friendsList = state.friends.filter(friend => friend.email !== state.user.email);\r\n  const groups = [...state.rooms];\r\n  \r\n\r\n  // setFriends(state.friends)\r\n\r\n  const createGroupChat = (e) => {\r\n    const groupName = prompt(\"Enter Group Name\");\r\n    const category = \"group\";\r\n\r\n    if (groupName) {\r\n      database.collection(\"rooms\").add({\r\n        name: groupName,\r\n        category\r\n      });\r\n    }\r\n   }\r\n\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className=\"sidebar__search\">\r\n          <input type=\"search\" placeholder=\"Search\" />\r\n          <Search />\r\n        </div>\r\n\r\n        <div className=\"sidebar__favorite\">\r\n          <div className=\"flex\">\r\n            <h2>FAVORITES</h2>\r\n            <Add onClick={createGroupChat} />\r\n          </div>\r\n          {groups\r\n            .map((message) => (\r\n              <Link className=\"message-link\" to={`/group/${message.id}`} key={message.id}>\r\n                <div className=\"single__favorite\">\r\n                  <p>\r\n                    <span>#</span> {message.name}\r\n                  </p>\r\n                </div>\r\n              </Link>\r\n            ))}\r\n        </div>\r\n\r\n        <div className=\"direct__messages\">\r\n          <div className=\"flex\">\r\n            <h2>DIRECT MESSAGES</h2>\r\n            <Add />\r\n          </div>\r\n\r\n          {/* List of friends */}\r\n          \r\n          {\r\n            friendsList.map(singleFriend => (\r\n              <Link className=\"single__message\" to={`/message/${singleFriend.id}`} key={singleFriend.email}>\r\n                <Avatar\r\n                  style={{ height: \"35px\", width: \"35px\" }}\r\n                  src={singleFriend.photoURL}\r\n                />\r\n                <h3>{singleFriend.name}</h3>\r\n                <span>2</span>\r\n              </Link>\r\n            ))\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\Firebase\\Firebase.js",[],"C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\components\\RoomChat.jsx",["62","63","64","65"],"import { IconButton } from '@material-ui/core';\r\nimport { InsertEmoticon, Mic, Send, Star } from '@material-ui/icons'\r\nimport React, {useState, useEffect} from 'react'\r\nimport './component-stylesheet/RoomChat.css'\r\nimport { useParams } from 'react-router-dom'\r\nimport {database} from '../Firebase/Firebase'\r\nimport { useStateValue } from '../state-management/StateProvider';\r\nimport firebase from 'firebase';\r\n\r\nfunction RoomChat({type}) {\r\n  const { roomId } = useParams();\r\n  const [roomMessage, setRoomMessage] = useState([]);\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [state] = useStateValue();\r\n  const [input, setInput] = useState(\"\");\r\n  const [loggedInUser, setLoggedInUser] = useState(null);\r\n  const [currentFriend, setCurrentFriend] = useState(null);\r\n  const [chatBuddy, setChatBuddy] = useState(null)\r\n  // const [friendMessage, setFriendMessage] = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n      // database.collection('rooms').doc(roomId).onSnapshot(snapshot => setRoomName(snapshot.data().name))\r\n      const presentRoom = type === \"room\" ? state.rooms.filter(room => room.id === roomId) : state.friends.filter(room => room.id === roomId);\r\n      setRoomName(presentRoom[0].name)\r\n      setEmail(presentRoom[0].email)\r\n       \r\n      if (type === \"room\") {\r\n        database.collection(\"rooms\").doc(roomId).collection(\"message\").orderBy('timestamp', 'asc').onSnapshot(snapshot => setRoomMessage(snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }))))\r\n      } else {\r\n\r\n      database.collection(\"users\").onSnapshot(snapshot => {\r\n        // getting your account id\r\n        let users = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n\r\n        let you = users.filter(user => user.email === state.user.email)[0]\r\n        setLoggedInUser(you);\r\n\r\n      if (you){\r\n          database.collection(\"users\").doc(you.id).collection(\"allMessages\").onSnapshot(snapshot => {\r\n\r\n          // getting the id of the person you want to send the message to\r\n         \r\n\r\n          const friend = state.friends.filter(friend => friend.email === presentRoom[0].email);\r\n          setChatBuddy(friend[0])\r\n\r\n          database.collection(\"users\").doc(you.id).collection(\"allMessages\")\r\n            .doc(friend[0].id).collection(\"message\").orderBy('timestamp', 'asc').onSnapshot(snapshot => setRoomMessage(snapshot.docs.map(doc => ({\r\n              id: doc.id,\r\n              ...doc.data()\r\n            }))))\r\n          \r\n        });\r\n      }\r\n\r\n      })\r\n    }\r\n  }, [roomId]);\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (type === \"room\") {\r\n      database.collection(\"rooms\").doc(roomId).collection(\"message\").add({\r\n        name: state.user.name,\r\n        message: input,\r\n        email: state.user.email,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n      })\r\n\r\n      setInput(\"\")\r\n    }else{\r\n      database.collection(\"users\").doc(loggedInUser.id).collection(\"allMessages\")\r\n      .doc(chatBuddy.id).collection(\"message\").add({\r\n        name: state.user.name,\r\n        message: input,\r\n        email: state.user.email,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n      });\r\n\r\n      database.collection(\"users\").doc(chatBuddy.id).collection(\"allMessages\")\r\n      .doc(loggedInUser.id).collection(\"message\").add({\r\n        name: state.user.name,\r\n        message: input,\r\n        email: state.user.email,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n      });\r\n\r\n      setInput(\"\")\r\n    }\r\n  }\r\n  \r\n    return (\r\n      <div className=\"room__chat\">\r\n        <div className=\"room__chat__header\">\r\n          <div className=\"info\">\r\n            <div className=\"room__name\">\r\n              <span>#</span>\r\n              <h2>{roomName}</h2>\r\n            </div>\r\n            <div className=\"number__of__members\">\r\n              <span>6 members</span>\r\n              <button>+ Add member</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"icons\">\r\n            <IconButton className=\"room__headerIcons\">\r\n              <Star />\r\n            </IconButton>\r\n            <IconButton className=\"room__headerIcons\">\r\n              <Star />\r\n            </IconButton>\r\n            <IconButton className=\"room__headerIcons\">\r\n              <Star />\r\n            </IconButton>\r\n            <IconButton className=\"room__headerIcons\">\r\n              <Star />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div className=\"room__chat__body\">\r\n          {/* <p className=\"message sender\">\r\n            <span className=\"name\">You</span>\r\n            How are you doing\r\n            <span className=\"timestamp\">{new Date().toUTCString()}</span>\r\n          </p>\r\n\r\n          <p className=\"message\">\r\n            <span className=\"name\">john snow</span>\r\n            I'm fine, what about you\r\n            <span className=\"timestamp\">{new Date().toUTCString()}</span>\r\n          </p> */}\r\n\r\n          {roomMessage.map((message) => (\r\n            <p className={`message ${message.email === state.user.email ? \"sender\" : \"\"}`} key={message.id}>\r\n              <span className=\"name\">{message.email === state.user.email ? \"You\" : message.name}</span>\r\n              {message.message}\r\n              <span className=\"timestamp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\r\n            </p>\r\n          ))}\r\n        </div>\r\n        <div className=\"chat__footer\">\r\n          <div className=\"form__container\">\r\n            <Mic style={{ marginRight: \"5px\" }} />\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n              <input type=\"text\" placeholder=\"Enter message...\" value={input} onChange={ (e)=> setInput(e.target.value)}/>\r\n              <InsertEmoticon className=\"emoji\" />\r\n              <IconButton className=\"send__button\" onClick={handleSubmit}>\r\n                <Send style={{ color: \"white\" }} />\r\n              </IconButton>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default RoomChat\r\n","C:\\Users\\Black Vibes\\Documents\\react apps\\black-vibes-chat-app-master\\black-vibes-chat-app-master\\src\\components\\RoomInfo.jsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"66","replacedBy":"70"},{"ruleId":"68","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":42,"column":7,"nodeType":"74","endLine":42,"endColumn":9,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":26,"nodeType":"78","messageId":"79","endLine":1,"endColumn":35},{"ruleId":"76","severity":1,"message":"80","line":12,"column":10,"nodeType":"78","messageId":"79","endLine":12,"endColumn":18},{"ruleId":"76","severity":1,"message":"81","line":12,"column":20,"nodeType":"78","messageId":"79","endLine":12,"endColumn":31},{"ruleId":"76","severity":1,"message":"82","line":14,"column":10,"nodeType":"78","messageId":"79","endLine":14,"endColumn":15},{"ruleId":"76","severity":1,"message":"83","line":18,"column":10,"nodeType":"78","messageId":"79","endLine":18,"endColumn":23},{"ruleId":"76","severity":1,"message":"84","line":18,"column":25,"nodeType":"78","messageId":"79","endLine":18,"endColumn":41},{"ruleId":"72","severity":1,"message":"85","line":66,"column":6,"nodeType":"74","endLine":66,"endColumn":14,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],["87"],["88"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["89"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'messages' is assigned a value but never used.","'setMessages' is assigned a value but never used.","'email' is assigned a value but never used.","'currentFriend' is assigned a value but never used.","'setCurrentFriend' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'state.friends', 'state.rooms', 'state.user.email', and 'type'. Either include them or remove the dependency array.",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [dispatch]",{"range":"95","text":"96"},"Update the dependencies array to be: [roomId, state.friends, state.rooms, state.user.email, type]",{"range":"97","text":"98"},[1087,1089],"[dispatch]",[2602,2610],"[roomId, state.friends, state.rooms, state.user.email, type]"]